name: CI/CD

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [11, 17, 21]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Install java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '${{ matrix.version }}'
          cache: 'gradle'

      - name: Check code format
        run: ./gradlew spotlessCheck
      
      - name: Lint
        run: make lint
      
      - name: Test
        run: make test

      - name: Build
        run: make build
      
      - name: Publish to local maven repo
        run: make install

  cd:
    name: CD
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    needs: [ci]
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          # we need to fetch all existing git tags
          fetch-depth: 0

      - name: Create git tags and publish to Maven Central
        env:
          GPG_SIGNING_KEY: "${{ secrets.GPG_SIGNING_KEY }}"
          GPG_SIGNING_PASSWORD: "${{ secrets.GPG_SIGNING_PASSWORD }}"
          ORG_GRADLE_PROJECT_mavenCentralUsername: "${{ secrets.MAVEN_CENTRAL_USERNAME }}"
          ORG_GRADLE_PROJECT_mavenCentralPassword: "${{ secrets.MAVEN_CENTRAL_PASSWORD }}"
        run: |
          git config --global user.name "SDK Releaser Bot"
          git config --global user.email "noreply@stackit.de"
          ./scripts/publish.sh

