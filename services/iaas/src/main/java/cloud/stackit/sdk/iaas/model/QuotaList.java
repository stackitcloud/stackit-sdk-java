/*
 * IaaS-API
 * This API allows you to create and modify IaaS resources.
 *
 * The version of the OpenAPI document: 2beta1
 * Contact: stackit-iaas@mail.schwarz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cloud.stackit.sdk.iaas.model;

import cloud.stackit.sdk.iaas.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/** Object that represents the quotas for a project. */
@javax.annotation.Generated(
		value = "org.openapitools.codegen.languages.JavaClientCodegen",
		comments = "Generator version: 7.15.0")
public class QuotaList {
	public static final String SERIALIZED_NAME_BACKUP_GIGABYTES = "backupGigabytes";

	@SerializedName(SERIALIZED_NAME_BACKUP_GIGABYTES)
	@javax.annotation.Nonnull
	private Quota backupGigabytes;

	public static final String SERIALIZED_NAME_BACKUPS = "backups";

	@SerializedName(SERIALIZED_NAME_BACKUPS)
	@javax.annotation.Nonnull
	private Quota backups;

	public static final String SERIALIZED_NAME_GIGABYTES = "gigabytes";

	@SerializedName(SERIALIZED_NAME_GIGABYTES)
	@javax.annotation.Nonnull
	private Quota gigabytes;

	public static final String SERIALIZED_NAME_NETWORKS = "networks";

	@SerializedName(SERIALIZED_NAME_NETWORKS)
	@javax.annotation.Nonnull
	private Quota networks;

	public static final String SERIALIZED_NAME_NICS = "nics";

	@SerializedName(SERIALIZED_NAME_NICS)
	@javax.annotation.Nonnull
	private Quota nics;

	public static final String SERIALIZED_NAME_PUBLIC_IPS = "publicIps";

	@SerializedName(SERIALIZED_NAME_PUBLIC_IPS)
	@javax.annotation.Nonnull
	private Quota publicIps;

	public static final String SERIALIZED_NAME_RAM = "ram";

	@SerializedName(SERIALIZED_NAME_RAM)
	@javax.annotation.Nonnull
	private Quota ram;

	public static final String SERIALIZED_NAME_SECURITY_GROUP_RULES = "securityGroupRules";

	@SerializedName(SERIALIZED_NAME_SECURITY_GROUP_RULES)
	@javax.annotation.Nonnull
	private Quota securityGroupRules;

	public static final String SERIALIZED_NAME_SECURITY_GROUPS = "securityGroups";

	@SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
	@javax.annotation.Nonnull
	private Quota securityGroups;

	public static final String SERIALIZED_NAME_SNAPSHOTS = "snapshots";

	@SerializedName(SERIALIZED_NAME_SNAPSHOTS)
	@javax.annotation.Nonnull
	private Quota snapshots;

	public static final String SERIALIZED_NAME_VCPU = "vcpu";

	@SerializedName(SERIALIZED_NAME_VCPU)
	@javax.annotation.Nonnull
	private Quota vcpu;

	public static final String SERIALIZED_NAME_VOLUMES = "volumes";

	@SerializedName(SERIALIZED_NAME_VOLUMES)
	@javax.annotation.Nonnull
	private Quota volumes;

	public QuotaList() {}

	public QuotaList backupGigabytes(@javax.annotation.Nonnull Quota backupGigabytes) {
		this.backupGigabytes = backupGigabytes;
		return this;
	}

	/**
	 * Total size in GiB of backups.
	 *
	 * @return backupGigabytes
	 */
	@javax.annotation.Nonnull
	public Quota getBackupGigabytes() {
		return backupGigabytes;
	}

	public void setBackupGigabytes(@javax.annotation.Nonnull Quota backupGigabytes) {
		this.backupGigabytes = backupGigabytes;
	}

	public QuotaList backups(@javax.annotation.Nonnull Quota backups) {
		this.backups = backups;
		return this;
	}

	/**
	 * Number of backups.
	 *
	 * @return backups
	 */
	@javax.annotation.Nonnull
	public Quota getBackups() {
		return backups;
	}

	public void setBackups(@javax.annotation.Nonnull Quota backups) {
		this.backups = backups;
	}

	public QuotaList gigabytes(@javax.annotation.Nonnull Quota gigabytes) {
		this.gigabytes = gigabytes;
		return this;
	}

	/**
	 * Total size in GiB of volumes and snapshots.
	 *
	 * @return gigabytes
	 */
	@javax.annotation.Nonnull
	public Quota getGigabytes() {
		return gigabytes;
	}

	public void setGigabytes(@javax.annotation.Nonnull Quota gigabytes) {
		this.gigabytes = gigabytes;
	}

	public QuotaList networks(@javax.annotation.Nonnull Quota networks) {
		this.networks = networks;
		return this;
	}

	/**
	 * Number of networks.
	 *
	 * @return networks
	 */
	@javax.annotation.Nonnull
	public Quota getNetworks() {
		return networks;
	}

	public void setNetworks(@javax.annotation.Nonnull Quota networks) {
		this.networks = networks;
	}

	public QuotaList nics(@javax.annotation.Nonnull Quota nics) {
		this.nics = nics;
		return this;
	}

	/**
	 * Number of network interfaces.
	 *
	 * @return nics
	 */
	@javax.annotation.Nonnull
	public Quota getNics() {
		return nics;
	}

	public void setNics(@javax.annotation.Nonnull Quota nics) {
		this.nics = nics;
	}

	public QuotaList publicIps(@javax.annotation.Nonnull Quota publicIps) {
		this.publicIps = publicIps;
		return this;
	}

	/**
	 * Number of public IP addresses.
	 *
	 * @return publicIps
	 */
	@javax.annotation.Nonnull
	public Quota getPublicIps() {
		return publicIps;
	}

	public void setPublicIps(@javax.annotation.Nonnull Quota publicIps) {
		this.publicIps = publicIps;
	}

	public QuotaList ram(@javax.annotation.Nonnull Quota ram) {
		this.ram = ram;
		return this;
	}

	/**
	 * Amount of server RAM in MiB.
	 *
	 * @return ram
	 */
	@javax.annotation.Nonnull
	public Quota getRam() {
		return ram;
	}

	public void setRam(@javax.annotation.Nonnull Quota ram) {
		this.ram = ram;
	}

	public QuotaList securityGroupRules(@javax.annotation.Nonnull Quota securityGroupRules) {
		this.securityGroupRules = securityGroupRules;
		return this;
	}

	/**
	 * Number of security group rules.
	 *
	 * @return securityGroupRules
	 */
	@javax.annotation.Nonnull
	public Quota getSecurityGroupRules() {
		return securityGroupRules;
	}

	public void setSecurityGroupRules(@javax.annotation.Nonnull Quota securityGroupRules) {
		this.securityGroupRules = securityGroupRules;
	}

	public QuotaList securityGroups(@javax.annotation.Nonnull Quota securityGroups) {
		this.securityGroups = securityGroups;
		return this;
	}

	/**
	 * Number of security groups.
	 *
	 * @return securityGroups
	 */
	@javax.annotation.Nonnull
	public Quota getSecurityGroups() {
		return securityGroups;
	}

	public void setSecurityGroups(@javax.annotation.Nonnull Quota securityGroups) {
		this.securityGroups = securityGroups;
	}

	public QuotaList snapshots(@javax.annotation.Nonnull Quota snapshots) {
		this.snapshots = snapshots;
		return this;
	}

	/**
	 * Number of snapshots.
	 *
	 * @return snapshots
	 */
	@javax.annotation.Nonnull
	public Quota getSnapshots() {
		return snapshots;
	}

	public void setSnapshots(@javax.annotation.Nonnull Quota snapshots) {
		this.snapshots = snapshots;
	}

	public QuotaList vcpu(@javax.annotation.Nonnull Quota vcpu) {
		this.vcpu = vcpu;
		return this;
	}

	/**
	 * Number of server cores.
	 *
	 * @return vcpu
	 */
	@javax.annotation.Nonnull
	public Quota getVcpu() {
		return vcpu;
	}

	public void setVcpu(@javax.annotation.Nonnull Quota vcpu) {
		this.vcpu = vcpu;
	}

	public QuotaList volumes(@javax.annotation.Nonnull Quota volumes) {
		this.volumes = volumes;
		return this;
	}

	/**
	 * Number of volumes.
	 *
	 * @return volumes
	 */
	@javax.annotation.Nonnull
	public Quota getVolumes() {
		return volumes;
	}

	public void setVolumes(@javax.annotation.Nonnull Quota volumes) {
		this.volumes = volumes;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		QuotaList quotaList = (QuotaList) o;
		return Objects.equals(this.backupGigabytes, quotaList.backupGigabytes)
				&& Objects.equals(this.backups, quotaList.backups)
				&& Objects.equals(this.gigabytes, quotaList.gigabytes)
				&& Objects.equals(this.networks, quotaList.networks)
				&& Objects.equals(this.nics, quotaList.nics)
				&& Objects.equals(this.publicIps, quotaList.publicIps)
				&& Objects.equals(this.ram, quotaList.ram)
				&& Objects.equals(this.securityGroupRules, quotaList.securityGroupRules)
				&& Objects.equals(this.securityGroups, quotaList.securityGroups)
				&& Objects.equals(this.snapshots, quotaList.snapshots)
				&& Objects.equals(this.vcpu, quotaList.vcpu)
				&& Objects.equals(this.volumes, quotaList.volumes);
	}

	@Override
	public int hashCode() {
		return Objects.hash(
				backupGigabytes,
				backups,
				gigabytes,
				networks,
				nics,
				publicIps,
				ram,
				securityGroupRules,
				securityGroups,
				snapshots,
				vcpu,
				volumes);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class QuotaList {\n");
		sb.append("    backupGigabytes: ").append(toIndentedString(backupGigabytes)).append("\n");
		sb.append("    backups: ").append(toIndentedString(backups)).append("\n");
		sb.append("    gigabytes: ").append(toIndentedString(gigabytes)).append("\n");
		sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
		sb.append("    nics: ").append(toIndentedString(nics)).append("\n");
		sb.append("    publicIps: ").append(toIndentedString(publicIps)).append("\n");
		sb.append("    ram: ").append(toIndentedString(ram)).append("\n");
		sb.append("    securityGroupRules: ")
				.append(toIndentedString(securityGroupRules))
				.append("\n");
		sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
		sb.append("    snapshots: ").append(toIndentedString(snapshots)).append("\n");
		sb.append("    vcpu: ").append(toIndentedString(vcpu)).append("\n");
		sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the first
	 * line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public static HashSet<String> openapiFields;
	public static HashSet<String> openapiRequiredFields;

	static {
		// a set of all properties/fields (JSON key names)
		openapiFields =
				new HashSet<String>(
						Arrays.asList(
								"backupGigabytes",
								"backups",
								"gigabytes",
								"networks",
								"nics",
								"publicIps",
								"ram",
								"securityGroupRules",
								"securityGroups",
								"snapshots",
								"vcpu",
								"volumes"));

		// a set of required properties/fields (JSON key names)
		openapiRequiredFields =
				new HashSet<String>(
						Arrays.asList(
								"backupGigabytes",
								"backups",
								"gigabytes",
								"networks",
								"nics",
								"publicIps",
								"ram",
								"securityGroupRules",
								"securityGroups",
								"snapshots",
								"vcpu",
								"volumes"));
	}

	/**
	 * Validates the JSON Element and throws an exception if issues found
	 *
	 * @param jsonElement JSON Element
	 * @throws IOException if the JSON Element is invalid with respect to QuotaList
	 */
	public static void validateJsonElement(JsonElement jsonElement) throws IOException {
		if (jsonElement == null) {
			if (!QuotaList.openapiRequiredFields
					.isEmpty()) { // has required fields but JSON element is null
				throw new IllegalArgumentException(
						String.format(
								"The required field(s) %s in QuotaList is not found in the empty JSON string",
								QuotaList.openapiRequiredFields.toString()));
			}
		}

		Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
		// check to see if the JSON string contains additional fields
		for (Map.Entry<String, JsonElement> entry : entries) {
			if (!QuotaList.openapiFields.contains(entry.getKey())) {
				throw new IllegalArgumentException(
						String.format(
								"The field `%s` in the JSON string is not defined in the `QuotaList` properties. JSON: %s",
								entry.getKey(), jsonElement.toString()));
			}
		}

		// check to make sure all required properties/fields are present in the JSON string
		for (String requiredField : QuotaList.openapiRequiredFields) {
			if (jsonElement.getAsJsonObject().get(requiredField) == null) {
				throw new IllegalArgumentException(
						String.format(
								"The required field `%s` is not found in the JSON string: %s",
								requiredField, jsonElement.toString()));
			}
		}
		JsonObject jsonObj = jsonElement.getAsJsonObject();
		// validate the required field `backupGigabytes`
		Quota.validateJsonElement(jsonObj.get("backupGigabytes"));
		// validate the required field `backups`
		Quota.validateJsonElement(jsonObj.get("backups"));
		// validate the required field `gigabytes`
		Quota.validateJsonElement(jsonObj.get("gigabytes"));
		// validate the required field `networks`
		Quota.validateJsonElement(jsonObj.get("networks"));
		// validate the required field `nics`
		Quota.validateJsonElement(jsonObj.get("nics"));
		// validate the required field `publicIps`
		Quota.validateJsonElement(jsonObj.get("publicIps"));
		// validate the required field `ram`
		Quota.validateJsonElement(jsonObj.get("ram"));
		// validate the required field `securityGroupRules`
		Quota.validateJsonElement(jsonObj.get("securityGroupRules"));
		// validate the required field `securityGroups`
		Quota.validateJsonElement(jsonObj.get("securityGroups"));
		// validate the required field `snapshots`
		Quota.validateJsonElement(jsonObj.get("snapshots"));
		// validate the required field `vcpu`
		Quota.validateJsonElement(jsonObj.get("vcpu"));
		// validate the required field `volumes`
		Quota.validateJsonElement(jsonObj.get("volumes"));
	}

	public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
		@SuppressWarnings("unchecked")
		@Override
		public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
			if (!QuotaList.class.isAssignableFrom(type.getRawType())) {
				return null; // this class only serializes 'QuotaList' and its subtypes
			}
			final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
			final TypeAdapter<QuotaList> thisAdapter =
					gson.getDelegateAdapter(this, TypeToken.get(QuotaList.class));

			return (TypeAdapter<T>)
					new TypeAdapter<QuotaList>() {
						@Override
						public void write(JsonWriter out, QuotaList value) throws IOException {
							JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
							elementAdapter.write(out, obj);
						}

						@Override
						public QuotaList read(JsonReader in) throws IOException {
							JsonElement jsonElement = elementAdapter.read(in);
							validateJsonElement(jsonElement);
							return thisAdapter.fromJsonTree(jsonElement);
						}
					}.nullSafe();
		}
	}

	/**
	 * Create an instance of QuotaList given an JSON string
	 *
	 * @param jsonString JSON string
	 * @return An instance of QuotaList
	 * @throws IOException if the JSON string is invalid with respect to QuotaList
	 */
	public static QuotaList fromJson(String jsonString) throws IOException {
		return JSON.getGson().fromJson(jsonString, QuotaList.class);
	}

	/**
	 * Convert an instance of QuotaList to an JSON string
	 *
	 * @return JSON string
	 */
	public String toJson() {
		return JSON.getGson().toJson(this);
	}
}
